a:2:{i:9;a:10:{s:12:"junkCallback";a:2:{i:24;i:1;i:14;a:1:{s:3:"var";a:1:{i:0;s:112:"string|array Either a string or an array containing a callback function to determine if a line is "junk" or not.";}}}s:1:"a";a:2:{i:24;i:1;i:14;a:1:{s:3:"var";a:1:{i:0;s:44:"array The first sequence to compare against.";}}}s:1:"b";a:2:{i:24;i:1;i:14;a:1:{s:3:"var";a:1:{i:0;s:26:"array The second sequence.";}}}s:8:"junkDict";a:2:{i:24;i:1;i:14;a:1:{s:3:"var";a:1:{i:0;s:106:"array Array of characters that are considered junk from the second sequence. Characters are the array key.";}}}s:3:"b2j";a:2:{i:24;i:1;i:14;a:1:{s:3:"var";a:1:{i:0;s:57:"array Array of indices that do not contain junk elements.";}}}s:7:"options";a:2:{i:24;i:1;i:14;a:1:{s:3:"var";a:1:{i:0;s:5:"array";}}}s:14:"defaultOptions";a:2:{i:24;i:1;i:14;a:1:{s:3:"var";a:1:{i:0;s:5:"array";}}}s:14:"matchingBlocks";a:2:{i:24;i:1;i:14;a:1:{s:3:"var";a:1:{i:0;s:5:"array";}}}s:7:"opCodes";a:2:{i:24;i:1;i:14;a:1:{s:3:"var";a:1:{i:0;s:5:"array";}}}s:10:"fullBCount";a:2:{i:24;i:1;i:14;a:1:{s:3:"var";a:1:{i:0;s:5:"array";}}}}i:8;a:19:{s:11:"__construct";a:3:{i:12;i:3;i:25;N;i:13;a:4:{s:1:"a";a:3:{i:16;i:0;i:21;b:1;i:18;s:12:"string|array";}s:1:"b";a:3:{i:16;i:1;i:21;b:1;i:18;s:12:"string|array";}s:12:"junkCallback";a:3:{i:16;i:2;i:21;b:1;i:18;s:12:"string|array";}s:7:"options";a:3:{i:16;i:3;i:21;b:1;i:18;s:5:"mixed";}}}s:10:"setOptions";a:3:{i:12;i:3;i:25;N;i:13;a:1:{s:7:"options";a:3:{i:16;i:0;i:19;b:1;i:18;s:5:"array";}}}s:12:"setSequences";a:3:{i:12;i:3;i:25;N;i:13;a:2:{s:1:"a";a:3:{i:16;i:0;i:21;b:1;i:18;s:12:"string|array";}s:1:"b";a:3:{i:16;i:1;i:21;b:1;i:18;s:12:"string|array";}}}s:7:"setSeq1";a:3:{i:12;i:3;i:25;N;i:13;a:1:{s:1:"a";a:3:{i:16;i:0;i:21;b:1;i:18;s:12:"string|array";}}}s:7:"setSeq2";a:3:{i:12;i:3;i:25;N;i:13;a:1:{s:1:"b";a:3:{i:16;i:0;i:21;b:1;i:18;s:12:"string|array";}}}s:6:"chainB";a:2:{i:12;i:1;i:25;N;}s:7:"isBJunk";a:3:{i:12;i:1;i:25;N;i:13;a:1:{s:1:"b";a:3:{i:16;i:0;i:21;b:1;i:18;s:6:"string";}}}s:16:"findLongestMatch";a:3:{i:12;i:3;i:25;N;i:13;a:4:{s:3:"alo";a:3:{i:16;i:0;i:21;b:1;i:18;s:7:"integer";}s:3:"ahi";a:3:{i:16;i:1;i:21;b:1;i:18;s:7:"integer";}s:3:"blo";a:3:{i:16;i:2;i:21;b:1;i:18;s:7:"integer";}s:3:"bhi";a:3:{i:16;i:3;i:21;b:1;i:18;s:7:"integer";}}}s:17:"linesAreDifferent";a:3:{i:12;i:3;i:25;N;i:13;a:2:{s:6:"aIndex";a:3:{i:16;i:0;i:21;b:1;i:18;s:7:"integer";}s:6:"bIndex";a:3:{i:16;i:1;i:21;b:1;i:18;s:7:"integer";}}}s:17:"getMatchingBlocks";a:2:{i:12;i:3;i:25;N;}s:10:"getOpCodes";a:2:{i:12;i:3;i:25;N;}s:17:"getGroupedOpcodes";a:3:{i:12;i:3;i:25;N;i:13;a:1:{s:7:"context";a:5:{i:16;i:0;i:17;b:1;i:21;b:1;i:22;i:3;i:18;s:7:"integer";}}}s:5:"ratio";a:2:{i:12;i:3;i:25;N;}s:11:"ratioReduce";a:3:{i:12;i:1;i:25;N;i:13;a:2:{s:3:"sum";a:3:{i:16;i:0;i:21;b:1;i:18;s:7:"integer";}s:6:"triple";a:3:{i:16;i:1;i:19;b:1;i:18;s:5:"array";}}}s:10:"quickRatio";a:2:{i:12;i:1;i:25;N;}s:14:"realquickRatio";a:2:{i:12;i:1;i:25;N;}s:14:"calculateRatio";a:3:{i:12;i:1;i:25;N;i:13;a:2:{s:7:"matches";a:3:{i:16;i:0;i:21;b:1;i:18;s:7:"integer";}s:6:"length";a:5:{i:16;i:1;i:17;b:1;i:21;b:1;i:22;i:0;i:18;s:7:"integer";}}}s:15:"arrayGetDefault";a:3:{i:12;i:1;i:25;N;i:13;a:3:{s:5:"array";a:3:{i:16;i:0;i:19;b:1;i:18;s:5:"array";}s:3:"key";a:3:{i:16;i:1;i:21;b:1;i:18;s:6:"string";}s:7:"default";a:3:{i:16;i:2;i:21;b:1;i:18;s:5:"mixed";}}}s:9:"tupleSort";a:3:{i:12;i:1;i:25;N;i:13;a:2:{s:1:"a";a:3:{i:16;i:0;i:19;b:1;i:18;s:5:"array";}s:1:"b";a:3:{i:16;i:1;i:19;b:1;i:18;s:5:"array";}}}}}